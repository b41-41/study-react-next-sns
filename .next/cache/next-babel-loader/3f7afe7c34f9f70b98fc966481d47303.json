{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: []\n};\nexport var initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var SIGN_UP = 'SIGN_UP';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var signUpAction = function signUpAction(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport var signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var loginSuccessAction = function loginSuccessAction(data) {\n  return {\n    type: LOG_IN_SUCCESS,\n    data: data\n  };\n};\nexport var loginRequestFailure = function loginRequestFailure(data) {\n  return {\n    type: LOG_IN_FAILURE,\n    data: data\n  };\n};\nexport var logoutRequestAction = {\n  type: LOG_OUT_REQUEST\n};\nexport var logoutSuccessAction = {\n  type: LOG_OUT_SUCCESS\n};\nexport var logoutRequestFailure = {\n  type: LOG_OUT_FAILURE\n};\nexport var signUp = function signUp(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: dummyUser,\n          loginData: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/jeong/Desktop/study-react-next-sns/reducers/user.js"],"names":["dummyUser","id","nickname","Posts","Followings","Followers","initialState","isLoggedIn","user","signUpData","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAction","data","type","signUpSuccess","loginRequestAction","loginSuccessAction","loginRequestFailure","logoutRequestAction","logoutSuccessAction","logoutRequestFailure","signUp","state","action","LOG_IN","LOG_OUT"],"mappings":"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","sourcesContent":["const dummyUser = {\n  id: 1,\n  nickname: '제로초',\n  Posts: [],\n  Followings: [],\n  Followers: [],\n};\n\nexport const initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {},\n};\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const signUpAction = (data) => {\n  return {\n    type: SIGN_UP,\n    data,\n  };\n};\n\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS,\n};\n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data,\n  }\n};\n\nexport const loginSuccessAction = (data) => {\n  return {\n    type: LOG_IN_SUCCESS,\n    data,\n  }\n};\n\nexport const loginRequestFailure = (data) => {\n  return {\n    type: LOG_IN_FAILURE,\n    data,\n  }\n};\n\nexport const logoutRequestAction = {\n  type: LOG_OUT_REQUEST,\n};\n\nexport const logoutSuccessAction = {\n  type: LOG_OUT_SUCCESS,\n};\n\nexport const logoutRequestFailure = {\n  type: LOG_OUT_FAILURE,\n};\n\nexport const signUp = (data) => {\n  return {\n    type: SIGN_UP,\n    data,\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN: {\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: dummyUser,\n        loginData: action.data,\n      };\n    }\n    case LOG_OUT: {\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    }\n    case SIGN_UP: {\n      return {\n        ...state,\n        signUpData: action.data,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}